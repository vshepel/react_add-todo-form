{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUser","usersFromServer","find","getHighestId","Math","max","defaultTodos","userId","App","useState","setTodos","users","setTitle","setUserId","errorTitle","setErrorTitle","errorUserId","setErrorUserId","onSubmit","event","preventDefault","trim","prevState","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c660683.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        cn('TodoInfo', {\n          'TodoInfo--completed': todo.completed,\n        })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUser = (id: number) => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n\nconst getHighestId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id));\n};\n\nconst defaultTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(defaultTodos);\n  const [users] = useState<User[]>(usersFromServer);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUserId, setErrorUserId] = useState(false);\n\n  const addTodo = (todo: Omit<Todo, 'id' | 'user'>) => {\n    setTodos(prevState => ([\n      ...prevState,\n      {\n        ...todo,\n        id: getHighestId(todos) + 1,\n        user: getUser(todo.userId),\n      },\n    ]));\n  };\n\n  const clearTodoForm = () => {\n    setTitle('');\n    setUserId(0);\n    setErrorTitle(false);\n    setErrorUserId(false);\n  };\n\n  const handleSubmitTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim() || !userId) {\n      setErrorTitle(!title.trim());\n      setErrorUserId(!userId);\n\n      return;\n    }\n\n    addTodo({\n      title,\n      userId,\n      completed: false,\n    });\n\n    clearTodoForm();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setErrorTitle(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setErrorUserId(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmitTodo} action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          <label htmlFor=\"titleField\">Title: </label>\n          <input\n            id=\"titleField\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n            data-cy=\"titleInput\"\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userField\">User: </label>\n          <select\n            id=\"userField\"\n            value={userId}\n            onChange={handleUserIdChange}\n            data-cy=\"userSelect\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {errorUserId && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}